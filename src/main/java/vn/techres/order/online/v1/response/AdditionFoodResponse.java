package vn.techres.order.online.v1.response;import com.fasterxml.jackson.annotation.JsonProperty;import lombok.Data;import java.math.BigDecimal;import java.util.List;import java.util.stream.Collectors;@Datapublic class AdditionFoodResponse {    private int id;    private String name;    private BigDecimal price = BigDecimal.ZERO;    @JsonProperty("temporary_price")    private BigDecimal temporaryPrice = BigDecimal.ZERO;    @JsonProperty("price_with_temporary")    private BigDecimal priceWithTemporary = BigDecimal.ZERO;    @JsonProperty("vat_percent")    private int vatPercent;    private String avatar;    @JsonProperty("unit_type")    private String unitType = "";    @JsonProperty("is_out_stock")    private int isOutStock;    @JsonProperty("category_name")    private String categoryName = "";    @JsonProperty("category_id")    private int categoryId;    public AdditionFoodResponse() {    }    ;    public AdditionFoodResponse(vn.techres.microservice.grpc.java.elasticsearch.customer_order_menu.AdditionFoodResponse entity) {        this.setId(entity.getId());        this.setName(entity.getName());        this.price = BigDecimal.valueOf(entity.getPrice());        this.priceWithTemporary = BigDecimal.valueOf(entity.getPriceWithTemporary());        this.vatPercent = (int) entity.getVatPercent();        this.avatar = entity.getAvatar().isEmpty() ? "" : entity.getAvatar();        this.unitType = entity.getUnitType();        this.isOutStock = entity.getIsOutStock();    }    public List<AdditionFoodResponse> mapToListMenu(List<vn.techres.microservice.grpc.java.elasticsearch.customer_order_menu.AdditionFoodResponse> baseEntities) {        return baseEntities.stream().map(AdditionFoodResponse::new).collect(Collectors.toList());    }}